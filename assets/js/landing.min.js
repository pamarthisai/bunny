const $ = (x) => document.querySelector(x);
const $$ = (x) => document.querySelectorAll(x);

function configureTags() {
    const $input = $('#interest-container input');
    const $tags = $('#tag-container');
    const $textBtn = $('#text-btn');
    const $videoBtn = $('#video-btn');
    const $chatroomBtn = $('#chatroom-btn');

    // Function to handle tag input
    const handleTagInput = (e) => {
        if (e.key !== 'Enter' && e.key !== ',') return;

        const value = $input.value.trim();
        if (!value) return;

        const tag = document.createElement('div');
        tag.id = 'tag';
        tag.innerHTML = `<p><span>${value}</span> Ã—</p>`;
        tag.style.cursor = 'pointer';
        tag.onclick = () => tag.remove();
        $tags.appendChild(tag);
        $input.value = '';

        e.preventDefault();
    };

    // Attach event listener for tag input
    $input.addEventListener('keydown', handleTagInput);

    // Function to handle button clicks
    const handleButtonClick = (path) => {
        const interestTags = Array.from($$('#tag-container div span')).map(span => span.textContent);
        const interests = interestTags.length > 0 ? interestTags : ($('#interests').value.trim() ? [$('#interests').value.trim()] : []);
        const queryParams = interests.length > 0 ? new URLSearchParams({
            interests: interests.join(',')
        }) : '';
        window.location.href = path + (queryParams ? '?' + queryParams : '');
    };

    // Attach event listeners for text and video buttons
    $textBtn.addEventListener('click', () => handleButtonClick('/chat'));
    $videoBtn.addEventListener('click', () => handleButtonClick('index1.html'));
    $chatroomBtn.addEventListener('click', () => handleButtonClick('/chatroom'));
}

async function getPeopleOnline() {
    const $peopleOnline = $('#peopleOnline p span');
    try {
        const res = await fetch('/online');
        if (!res.ok) {
            throw new Error("Couldn't fetch GET /online");
        }
        const {
            online
        } = await res.json();
        $peopleOnline.textContent = online;
    } catch (error) {
        console.error(error);
    }
}

// Initialize configurations and fetch online people count on DOMContentLoaded
document.addEventListener('DOMContentLoaded', async () => {
    configureTags();
    await getPeopleOnline();
});
